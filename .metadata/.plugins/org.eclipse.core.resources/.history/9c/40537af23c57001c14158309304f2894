package com.poc.petbook.Controller;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.mongodb.core.MongoTemplate;
import org.springframework.data.mongodb.core.query.Criteria;
import org.springframework.data.mongodb.core.query.Query;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.poc.petbook.Entities.DogLike;
import com.poc.petbook.Entities.DogOwners;
import com.poc.petbook.Entities.Dogs;
import com.poc.petbook.Entities.SwipedBy;
import com.poc.petbook.Entities.Matched;
import com.poc.petbook.Repository.DogOwnerRepository;
import com.poc.petbook.Repository.DogsRepository;
import com.poc.petbook.Repository.MatchedRepository;

@RestController
public class DogsController {

	@Autowired
	DogsRepository dogsRepository;
	
	@Autowired
	DogOwnerRepository dogOwnerRepository;
	
	@Autowired
	MatchedRepository matchedRepository;
	
	@Autowired
	MongoTemplate mongoTemplate;
	
	@RequestMapping(method=RequestMethod.GET,value="/dogs")
	public List<Dogs> getDogs() {
		return dogsRepository.findAll();
	}
	@RequestMapping(method=RequestMethod.GET,value="/dogOwners")
	public List<DogOwners> getDogOwners() {
		return dogOwnerRepository.findAll();
	}
	@RequestMapping(method=RequestMethod.POST,value="/swipedRight")
	public ResponseEntity<String> swippedRight(@RequestBody Matched matched) {
		System.out.println(matchedRepository.findAll());
		System.out.println(matched.getSwipedBy());
		System.out.println(matched.getPetName());
		System.out.println(matched.getUsernameSwipped());
		System.out.println(matched.getPetLike());
		
		Dogs dog1 = dogsRepository.findBypetName(matched.getPetName());
		System.out.println(dog1);
		
		Query query = new Query(Criteria 
        .where("dogOwner").is(matched.getSwipedBy())
        .and("petName").is(matched.getPetName())
        .and("swippedBy.dogName").is(matched.getPetLike()));
		
		List<Dogs> users = mongoTemplate.find(query, Dogs.class);
		
		System.out.println(users);
		 
		return new ResponseEntity<String>("Success ",HttpStatus.OK);
	}
	
	public void Matched() {
		
	}
}